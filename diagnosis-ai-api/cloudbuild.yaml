# Cloud Build configuration for automatic deployment from GitHub
steps:
  # Step 1: Build Docker image with correct platform
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '--platform=linux/amd64'
      - '-t'
      - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPOSITORY}/${_SERVICE_NAME}:${SHORT_SHA}'
      - '-t'
      - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPOSITORY}/${_SERVICE_NAME}:latest'
      - '.'
    dir: 'diagnosis-ai-api'

  # Step 2: Push Docker image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - '--all-tags'
      - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPOSITORY}/${_SERVICE_NAME}'

  # Step 3: Deploy to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gcloud'
    args:
      - 'run'
      - 'deploy'
      - '${_SERVICE_NAME}'
      - '--image=${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPOSITORY}/${_SERVICE_NAME}:${SHORT_SHA}'
      - '--region=${_REGION}'
      - '--platform=managed'
      - '--allow-unauthenticated'
      - '--service-account=${_SERVICE_ACCOUNT}'
      - '--set-env-vars=GOOGLE_CLOUD_PROJECT=${PROJECT_ID},LANGSMITH_TRACING=true,LANGSMITH_PROJECT=${_SERVICE_NAME}'
      - '--set-secrets=DATABASE_URL=${_SERVICE_NAME}-db-url:latest,GEMINI_API_KEY=${_SERVICE_NAME}-gemini-api-key:latest'
      - '--add-cloudsql-instances=${PROJECT_ID}:${_REGION}:${_SERVICE_NAME}-postgres'
      - '--cpu=1'
      - '--memory=2Gi'
      - '--min-instances=0'
      - '--max-instances=10'
      - '--port=8000'

# Substitution variables
substitutions:
  _REGION: 'asia-northeast1'
  _SERVICE_NAME: 'mbti-diagnosis-api'
  _REPOSITORY: 'mbti-diagnosis-api-repo'
  _SERVICE_ACCOUNT: 'mbti-diagnosis-api-cloud-run@${PROJECT_ID}.iam.gserviceaccount.com'

# Options
options:
  logging: CLOUD_LOGGING_ONLY
  machineType: 'E2_HIGHCPU_8'

# Timeout
timeout: '1200s'
