[project]
name = "diagnosis-ai"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "fastapi>=0.115.12",
    "firebase-admin>=6.8.0",
    "google-cloud-storage>=3.1.0",
    "google-generativeai>=0.8.5",
    "langchain-google-genai>=2.0.10",
    "langchain[google-genai]>=0.3.25",
    "langgraph>=0.4.5",
    "langgraph-checkpoint>=2.0.26",
    "langgraph-checkpoint-postgres>=2.0.21",
    "langsmith>=0.3.42",
    "numpy>=2.3.0",
    "psycopg2-binary>=2.9.10",
    "pytest>=8.4.0",
    "python-dotenv>=1.1.0",
    "sqlalchemy>=2.0.41",
    "uvicorn>=0.34.2",
]

[dependency-groups]
dev = [
    "pytest-asyncio>=1.0.0",
    "pytest-cov>=6.1.1",
    "pytest-env>=1.1.5",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/__pycache__/*",
    "*/test_*",
    "*/__init__.py",
    "*/conftest.py",
    "*/migrations/*",
    "*/alembic/*",
    "api/*",
    "src/driver/auth.py",    # Firebase auth wrapper - external dependency
    "src/driver/model.py",   # Data models - simple data structures
    "src/controller/type.py", # Type definitions - no logic
    "src/usecase/type.py",   # Type definitions - no logic
    "src/port/ports.py",     # Interface definitions - no logic
    "src/di_container.py",   # Dependency injection - configuration
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
show_missing = true
skip_covered = false
precision = 1

[tool.coverage.html]
directory = "htmlcov"

[tool.pytest.ini_options]
pythonpath = [
    "."
]
testpaths = [
    "tests"
]
python_files = [
    "test_*.py"
]
python_classes = [
    "Test*",
    "Test_*"
]
python_functions = [
    "test_*",
    "*test*",
    "test*"
]
addopts = [
    "-v",
    "--tb=short",
    "--strict-markers",
    "--disable-warnings"
]
env = [
    "GEMINI_API_KEY=test-api-key-for-testing",
    "DATABASE_URL=postgresql://test:test@localhost:5432/test"
]
